name: "Docker build nad push to GCR"

on:
  push:
    branches: ["main"]
jobs:
  build:
    name: Setup Google Cloud Account and Push image to the GCR
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_IMAGE_REPOSITORY_NAME}}
    outputs:
      docker_image: ${{ steps.step_output.outputs.docker_image }}
    steps:
      - name: Print image tag
        run: echo $GITHUB_RUN_ID
      - name: Login To GCP
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}

      - name: Configure Docker
        run: gcloud auth configure-docker --quiet

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build ./backend/. -t $IMAGE_NAME:$GITHUB_RUN_ID

      - name: Push Docker image
        run: docker push $IMAGE_NAME:$GITHUB_RUN_ID

      - name: set output
        id: step_output
        run: |
          echo "docker_image=$IMAGE_NAME:$GITHUB_RUN_ID" >> $GITHUB_OUTPUT
  apply:
    needs: build
    name: Terraform provisioning
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./infra
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Terraform Init
        run: terraform init
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
      # Generates an execution plan for Terraform
      - name: Terraform Plan
        run: terraform plan -var docker_image=${{ needs.build.outputs.docker_image }}
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
